<?xml version="1.0" encoding="UTF-8"?>
<typeSystemDescription xmlns="http://uima.apache.org/resourceSpecifier">
    <name>DKPro Core Backports</name>
    <description>Backported "Dependency" type from DKPro Core 1.8.0 for the "flavor" feature / for CoNLL-U (no JCas class generated to avoid conflict with DKPro Core 1.7.0)!

Backported "SurfaceForm" type from DKPro Core 1.9.0 for CoNLL-U.

Backported "SemArg" and "SemPred" from DKPRo Core 1.9.0 for Conll2009.
</description>
    <version>1.0</version>
    <vendor>Ubiquitous Knowledge Processing (UKP) Lab, Technische Universit√§t Darmstadt</vendor>
    <imports>
      <import name="desc.type.LexicalUnits"/>
    </imports>
    <types>
    <typeDescription>
      <name>de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.Dependency</name>
      <description>A dependency relation between two tokens. The dependency annotation begin and end offsets correspond to those of the dependent.</description>
      <supertypeName>uima.tcas.Annotation</supertypeName>
      <features>
        <featureDescription>
          <name>Governor</name>
          <description>The governor word</description>
          <rangeTypeName>de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Token</rangeTypeName>
        </featureDescription>
        <featureDescription>
          <name>Dependent</name>
          <description>The dependent word</description>
          <rangeTypeName>de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Token</rangeTypeName>
        </featureDescription>
        <featureDescription>
          <name>DependencyType</name>
          <description>The dependency type</description>
          <rangeTypeName>uima.cas.String</rangeTypeName>
        </featureDescription>
      <featureDescription>
          <name>flavor</name>
          <description>Flavor of the dependency relation (basic, collapsed, enhanced, etc...)</description>
          <rangeTypeName>uima.cas.String</rangeTypeName>
        </featureDescription>
      </features>
    </typeDescription>
    <typeDescription>
      <name>de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.SurfaceForm</name>
      <description>This annotation can be used to indicate an alternate surface form. E.g. some corpora consider a normalized form of the text with resolved contractions as the canonical form and only maintain the original surface form as a secondary information. One example is the Conll-U format.</description>
      <supertypeName>uima.tcas.Annotation</supertypeName>
      <features>
        <featureDescription>
          <name>value</name>
          <description>Alternate surface form.</description>
          <rangeTypeName>uima.cas.String</rangeTypeName>
        </featureDescription>
      </features>
    </typeDescription>
    <typeDescription>
      <name>de.tudarmstadt.ukp.dkpro.core.api.semantics.type.SemArg</name>
      <description>The SemArg annotation is attached to semantic arguments of semantic
predicates. Semantic arguments are characterized by their semantic role, e.g. Agent,
Experiencer, Topic. The semantic role of an argument is related to its semantic type
(for communication verbs, the Agent can be a person or an organization, but
typically not food).</description>
      <supertypeName>uima.tcas.Annotation</supertypeName>
    </typeDescription>
    <typeDescription>
      <name>de.tudarmstadt.ukp.dkpro.core.api.semantics.type.SemPred</name>
      <description>One of the predicates of a sentence (often a main verb, but nouns and adjectives can also be predicates). 
The SemPred annotation can be attached to predicates in a sentence.
Semantic predicates express events or situations and take semantic arguments
expressing the participants in these events or situations. All forms of main verbs
can be annotated with a SemPred. However, there are also many nouns and
adjectives that take arguments and can thus be annotated with a SemanticPredicate,
e.g. event nouns, such as "suggestion" (with arguments what and by whom), or
relational adjectives, such as "proud" (with arguments who and of what).</description>
      <supertypeName>uima.tcas.Annotation</supertypeName>
      <features>
        <featureDescription>
          <name>arguments</name>
          <description>The predicate's arguments.</description>
          <rangeTypeName>uima.cas.FSArray</rangeTypeName>
          <elementType>de.tudarmstadt.ukp.dkpro.core.api.semantics.type.SemArgLink</elementType>
        </featureDescription>
        <featureDescription>
          <name>category</name>
          <description>A more detailed specification of the predicate type depending on the theory being used, e.g. a frame name.</description>
          <rangeTypeName>uima.cas.String</rangeTypeName>
        </featureDescription>
      </features>
    </typeDescription>
    <typeDescription>
      <name>de.tudarmstadt.ukp.dkpro.core.api.semantics.type.SemArgLink</name>
      <description>The SemArgLink type is used to attach SemPred annotations to their respective SemArg annotations while giving each link a role.</description>
      <supertypeName>uima.cas.TOP</supertypeName>
      <features>
        <featureDescription>
          <name>role</name>
          <description>The role which the argument takes. The value depends on the theory being used, e.g. Arg0, Arg1, etc. or Buyer, Seller, etc.</description>
          <rangeTypeName>uima.cas.String</rangeTypeName>
        </featureDescription>
        <featureDescription>
          <name>target</name>
          <description>The target argument.</description>
          <rangeTypeName>de.tudarmstadt.ukp.dkpro.core.api.semantics.type.SemArg</rangeTypeName>
        </featureDescription>
      </features>
    </typeDescription>
  </types>
</typeSystemDescription>
